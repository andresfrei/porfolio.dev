---
import { PROJECTS_EN, PROJECTS_ES, PROJECTS_PT } from "@/data/projects";
import { getLangFromUrl, useTranslations } from "@/i18n/utils";
import AWS from "./icons/AWS.astro";
import Bootstrap from "./icons/Bootstrap.astro";
import ChromaDB from "./icons/ChromaDB.astro";
import COBOL from "./icons/COBOL.astro";
import GitHub from "./icons/GitHub.astro";
import GraphQL from "./icons/Graphql.astro";
import Mongo from "./icons/Mongo.astro";
import Nestjs from "./icons/Nestjs.astro";
import NextJS from "./icons/NextJS.astro";
import Node from "./icons/Node.astro";
import Openai from "./icons/OpenAi.astro";
import Postgresql from "./icons/Postgresql.astro";
import Prisma from "./icons/Prisma.astro";
import Python from "./icons/Python.astro";
import React from "./icons/React.astro";
import Tailwind from "./icons/Tailwind.astro";
import LinkButton from "./LinkButton.astro";

const currentLang = getLangFromUrl(Astro.url);
const t = useTranslations(currentLang);

const TAGS = {
  NEXT: {
    name: "Next.js",
    class: "bg-black text-white",
    icon: NextJS,
  },
  TAILWIND: {
    name: "Tailwind",
    class: "bg-[#003159] text-white",
    icon: Tailwind,
  },
  BOOTSTRAP: {
    name: "Bootstrap CSS",
    class: "bg-[#003159] text-white",
    icon: Bootstrap,
  },
  REACT: {
    name: "React JS",
    class: "bg-[#003159] text-white",
    icon: React,
  },
  EXPRESS: {
    name: "Express JS",
    class: "bg-[#003159] text-white",
    icon: Node,
  },
  MONGODB: {
    name: "Mongo DB",
    class: "bg-[#003159] text-white",
    icon: Mongo,
  },
  NESTJS: {
    name: "NestJs",
    class: "bg-[#003159] text-white",
    icon: Nestjs,
  },
  GRAPHQL: {
    name: "GraphQL",
    class: "bg-[#003159] text-white",
    icon: GraphQL,
  },
  PRISMA: {
    name: "Prisma",
    class: "bg-green-950 text-white",
    icon: Prisma,
  },
  POSTGRESQL: {
    name: "PostgreSQL",
    class: "bg-black text-white",
    icon: Postgresql,
  },
  OPENAI: {
    name: "OpenAI",
    class: "bg-black text-white",
    icon: Openai,
  },
  PYTHON: {
    name: "Python",
    class: "bg-blue-600 text-white",
    icon: Python,
  },
  AWS: {
    name: "AWS",
    class: "bg-orange-600 text-white",
    icon: AWS,
  },
  CHROMADB: {
    name: "ChromaDB",
    class: "bg-purple-600 text-white",
    icon: ChromaDB,
  },
  COBOL: {
    name: "COBOL",
    class: "bg-gray-700 text-white",
    icon: COBOL,
  },
};

const PROJECTS_DATA = {
  es: PROJECTS_ES,
  en: PROJECTS_EN,
  pt: PROJECTS_PT,
};

const projectsRaw = PROJECTS_DATA[currentLang];

// Map tag strings to TAGS objects
const PROJECTS = projectsRaw.map((project) => ({
  ...project,
  tags: project.tags.map((tagName) => TAGS[tagName as keyof typeof TAGS]),
}));
---

<section class="flex flex-col gap-y-16">
  {
    PROJECTS.map(({ image, title, description, tags, link, github }) => (
      <article>
        <h3 class="text-2xl font-semibold text-yellow-800 dark:text-yellow-200 mb-2">
          {title}
        </h3>
        <p class="text-lg mb-4 text-pretty">{description}</p>
        <ul class="flex gap-x-2 flex-row mb-2">
          {tags.map((tag) => (
            <li>
              <span
                class={`flex gap-x-2 rounded-full text-xs ${tag.class} py-1 px-2 `}
              >
                <tag.icon class="size-4" />
                {tag.name}
              </span>
            </li>
          ))}
        </ul>
        <img
          loading="lazy"
          class="rounded shadow-2xl shadow-white/10 aspect-video"
          src={image}
          alt={`Captura de pantalla del proyecto ${image}`}
        />
        <footer class="flex gap-x-4 items-end justify-start mt-4">
          {github && (
            <LinkButton href={github} target="_blank">
              <GitHub class="size-6" />
              {t("projects.viewCode")}
            </LinkButton>
          )}
          {link && link !== "#" && (
            <LinkButton href={link} target="_blank">
              <svg
                width="24"
                height="24"
                viewBox="0 0 24 24"
                stroke-width="1.5"
                stroke="currentColor"
                fill="none"
                stroke-linecap="round"
                stroke-linejoin="round"
              >
                <path stroke="none" d="M0 0h24v24H0z" fill="none" />
                <path d="M19.5 7a9 9 0 0 0 -7.5 -4a8.991 8.991 0 0 0 -7.484 4" />
                <path d="M11.5 3a16.989 16.989 0 0 0 -1.826 4" />
                <path d="M12.5 3a16.989 16.989 0 0 1 1.828 4" />
                <path d="M19.5 17a9 9 0 0 1 -7.5 4a8.991 8.991 0 0 1 -7.484 -4" />
                <path d="M11.5 21a16.989 16.989 0 0 1 -1.826 -4" />
                <path d="M12.5 21a16.989 16.989 0 0 0 1.828 -4" />
                <path d="M2 10l1 4l1.5 -4l1.5 4l1 -4" />
                <path d="M17 10l1 4l1.5 -4l1.5 4l1 -4" />
                <path d="M9.5 10l1 4l1.5 -4l1.5 4l1 -4" />
              </svg>
              {t("projects.viewSite")}
            </LinkButton>
          )}
        </footer>
      </article>
    ))
  }
</section>

---
//import "@fontsource-variable/onest";

import Footer from "../components/Footer.astro";
import Header from "../components/Header.astro";
import {
  getLangFromUrl,
  getLocalizedPath,
  useTranslations,
  type Language,
} from "../i18n/utils";

interface Props {
  title: string;
  description: string;
  image?: string;
  canonical?: string;
  lang?: Language;
}

const {
  description,
  title,
  image = "/avatar.webp",
  canonical,
  lang: propLang,
} = Astro.props;

// Detectar idioma de la URL o usar el prop
const currentLang = propLang || getLangFromUrl(Astro.url);

// Obtener traducciones para el idioma actual
const t = useTranslations(currentLang);

// Construir URL canónica
const canonicalURL = canonical
  ? new URL(canonical, Astro.site)
  : new URL(Astro.url.pathname, Astro.site);

// URL de la imagen para Open Graph
const socialImageURL = new URL(image, Astro.site);
---

<!doctype html>
<html lang={currentLang}>
  <head>
    <meta charset="UTF-8" />
    <meta name="description" content={description} />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />

    <!-- Canonical URL -->
    <link rel="canonical" href={canonicalURL} />

    <!-- Alternate hreflang links -->
    <link
      rel="alternate"
      hreflang="es"
      href={new URL(getLocalizedPath(Astro.url.pathname, "es"), Astro.site)}
    />
    <link
      rel="alternate"
      hreflang="en"
      href={new URL(getLocalizedPath(Astro.url.pathname, "en"), Astro.site)}
    />
    <link
      rel="alternate"
      hreflang="pt"
      href={new URL(getLocalizedPath(Astro.url.pathname, "pt"), Astro.site)}
    />
    <link
      rel="alternate"
      hreflang="x-default"
      href={new URL(Astro.url.pathname, Astro.site)}
    />

    <!-- Basic SEO -->
    <title>{title}</title>
    <meta name="author" content="Andrés Frei" />
    <meta name="robots" content="index, follow" />
    <meta name="language" content={currentLang} />

    <!-- Keywords -->
    <meta name="keywords" content={t("meta.keywords")} />

    <!-- Open Graph / Facebook -->
    <meta property="og:type" content="website" />
    <meta property="og:url" content={canonicalURL} />
    <meta property="og:title" content={title} />
    <meta property="og:description" content={description} />
    <meta property="og:image" content={socialImageURL} />
    <meta
      property="og:image:alt"
      content="Andrés Frei - DBA & Full Stack Developer"
    />
    <meta
      property="og:site_name"
      content={currentLang === "es"
        ? "Portfolio de Andrés Frei"
        : currentLang === "en"
          ? "Andrés Frei's Portfolio"
          : "Portfólio de Andrés Frei"}
    />
    <meta
      property="og:locale"
      content={currentLang === "es"
        ? "es_AR"
        : currentLang === "en"
          ? "en_US"
          : "pt_BR"}
    />
    <meta
      property="og:locale:alternate"
      content={currentLang === "es"
        ? "en_US"
        : currentLang === "en"
          ? "pt_BR"
          : "es_AR"}
    />

    <!-- Twitter -->
    <meta name="twitter:card" content="summary_large_image" />
    <meta name="twitter:url" content={canonicalURL} />
    <meta name="twitter:title" content={title} />
    <meta name="twitter:description" content={description} />
    <meta name="twitter:image" content={socialImageURL} />
    <meta
      name="twitter:image:alt"
      content="Andrés Frei - DBA & Full Stack Developer"
    />
    <meta name="twitter:site" content="@andresfrei" />
    <meta name="twitter:creator" content="@andresfrei" />

    <!-- Additional meta tags -->
    <meta name="theme-color" content="#0a0a0a" />
    <meta name="color-scheme" content="light dark" />

    <!-- Structured Data -->
    <script
      type="application/ld+json"
      set:html={JSON.stringify({
        "@context": "https://schema.org",
        "@type": "Person",
        name: "Andrés Frei",
        jobTitle: ["DBA", "Full Stack Developer"],
        description:
          currentLang === "es"
            ? "DBA & Full Stack Developer especializado en IA, bases de datos y desarrollo con 20+ años de experiencia"
            : currentLang === "en"
              ? "DBA & Full Stack Developer specialized in AI, databases and development with 20+ years of experience"
              : "DBA & Full Stack Developer especializado em IA, bancos de dados e desenvolvimento com 20+ anos de experiência",
        url: "https://andresfrei.dev",
        image: "https://andresfrei.dev/avatar.jpeg",
        sameAs: [
          "https://linkedin.com/in/andresfrei",
          "https://github.com/andresfrei",
        ],
        address: {
          "@type": "PostalAddress",
          addressLocality: "Buenos Aires",
          addressCountry: "AR",
        },
        knowsAbout: [
          "PostgreSQL",
          "Node.js",
          "React",
          "Next.js",
          "Astro",
          "Tailwind CSS",
          "Database Administration",
          "Full Stack Development",
          "Artificial Intelligence",
        ],
      })}
    />
  </head>

  <body class="relative text-black dark:text-white">
    <div
      class="absolute top-0 bottom-0 z-[-2] min-h-screen w-full bg-neutral-100 dark:bg-neutral-950
      bg-[radial-gradient(ellipse_80%_80%_at_50%_-20%,rgba(217,216,255,0.5),rgba(255,255,255,0.9))]
      dark:bg-[radial-gradient(ellipse_80%_80%_at_50%_-20%,rgba(120,119,198,0.3),rgba(255,255,255,0))]"
    >
    </div>
    <Header />
    <slot />
    <Footer />
  </body>
</html>

<style is:global>
  :root {
    color-scheme: light dark;
  }

  html {
    font-family: "Onest Variable", system-ui, sans-serif;
    scroll-behavior: smooth;
  }

  body {
    color: rgba(17, 17, 17, 0.9);
    display: flex;
    flex-direction: column;
    min-height: 100vh;
    overscroll-behavior: none;
  }

  @media (prefers-reduced-motion: reduce) {
    html {
      scroll-behavior: auto;
    }
  }

  @media (prefers-color-scheme: dark) {
    body {
      color: rgba(255, 255, 255, 0.9);
    }
  }
</style>
